#!/bin/bash

# Update and upgrade packages
apt-update() {
  sudo apt -y update
  sudo apt -y upgrade
}

# Clean packages
apt-clean() {
  sudo apt -y autoremove
  sudo apt-get -y autoclean
  sudo apt-get -y clean
}

# List intentionally installed packages
apt-list() {
  (zcat "$(ls -tr /var/log/apt/history.log*.gz)"; cat /var/log/apt/history.log) 2> /dev/null |
  grep -E '^Commandline' |
  sed -e 's/Commandline: \(.*\)/\1/' |
  grep -E -v '^/usr/bin/unattended-upgrade$'
}

# Delete swap files
rm-swap() {
  rm -fv "$PWD"/*.swp
  rm -fv "$HOME"/.local/share/nvim/swap/*.swp
}

# Go back up N directories
up() {
  if [[ $# -eq 0 ]]; then
    cd "../"
  elif [[ $# -eq 1 ]] && [[ $1 -gt 0 ]]; then
    local up_dir=""
    for _ in $(seq 1 "$1"); do
      up_dir+="../"
    done
    cd "$up_dir" || return 1
  else
    echo "Usage: up [n]"
    return 1
  fi
}

# Pretty diff
function pdiff() {
  if [[ $# -ne 2 ]]; then
    echo "Usage: pdiff file1 file2"
    return 1
  fi

  if [[ -x $(command -v diff-so-fancy) ]]; then
    diff -s -u --color=always "$1" "$2" | diff-so-fancy
  else
    diff -s -u --color=always "$1" "$2"
  fi
}

# Print command cheatsheet
cheat() {
  curl -s "cheat.sh/$1"
}

# Push dotfiles
function pushdot() {
  scp -r "$HOME"/.shell "$1":
  scp "$HOME"/.bashrc "$1":
  scp "$HOME"/.vimrc "$1":
  ssh "$1" "sed -i -e 's/EDITOR=\"nvim\"/EDITOR=\"vim\"/g' .bashrc"
}

# Browse git commits
glog() {
  local log_fmt="%C(yellow)%h%Cred%d %Creset%s %Cgreen(%ar)%Creset"
  local commit_hash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"
  local view_commit="$commit_hash | xargs -I hash sh -c \"git i --color=always hash | diff-so-fancy\""

  git log --color=always --format="$log_fmt" --abbrev-commit "$@" | \
    fzf --no-sort --tiebreak=index --no-multi --reverse --ansi \
    --header="enter to view, alt-y to copy hash" --preview="$view_commit" \
    --bind="enter:execute:$view_commit | less -R" \
    --bind="alt-y:execute:$commit_hash | xclip -selection clipboard"
}
